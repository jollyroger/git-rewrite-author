#!/bin/sh
#
# Mass update of the Git author information based on mailmap file. To use:
#
# 0. Fill your substitution information into the .mailmap file in the top dir
#    of your git repo. See git-shortlog(1) for more information.
# 1. Check you haven't missed anything with `git shortlog -sne`.
# 2. Run this script from the top dir of your git repository.

git filter-branch --env-filter '
PROJECT_DIR=`dirname ${PWD}`
PROJECT_DIR=`dirname ${PROJECT_DIR}`
MAILMAP_FILE=$PROJECT_DIR/.mailmap
echo Using mailmap file $MAILMAP_FILE

NEW_COMMITTER=`grep -m 1 $GIT_COMMITTER_EMAIL "$PROJECT_DIR/.mailmap"|cut -d" " -f1-3`
if [ -n "$NEW_COMMITTER" ] ; then
    NEW_COMMITTER_FIRST_NAME=`echo $NEW_COMMITTER|cut -d" " -f1`
    NEW_COMMITTER_LAST_NAME=`echo $NEW_COMMITTER|cut -d" " -f2`
    export GIT_COMMITTER_NAME="$NEW_COMMITTER_FIRST_NAME $NEW_COMMITTER_LAST_NAME"
    export GIT_COMMITTER_EMAIL=`echo $NEW_COMMITTER|cut -d" " -f3|tr -d "<>"`
    echo \"$GIT_COMMITTER_NAME\" \<$GIT_COMMITTER_EMAIL\>
fi

NEW_AUTHOR=`grep -m 1 $GIT_AUTHOR_EMAIL $PROJECT_DIR/.mailmap|cut -d" " -f1-3`
if [ -n "$NEW_AUTHOR" ] ; then 
    NEW_AUTHOR_FIRST_NAME=`echo $NEW_AUTHOR|cut -d" " -f1`
    NEW_AUTHOR_LAST_NAME=`echo $NEW_AUTHOR|cut -d" " -f2`
    export GIT_AUTHOR_NAME="$NEW_AUTHOR_FIRST_NAME $NEW_AUTHOR_LAST_NAME"
    export GIT_AUTHOR_EMAIL=`echo $NEW_AUTHOR|cut -d" " -f3|tr -d "<>"`
    echo \"$GIT_AUTHOR_NAME\" \<$GIT_AUTHOR_EMAIL\>
fi' --tag-name-filter cat -- --branches --tags
